generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comments {
  id        Int       @id @default(autoincrement())
  content   String    @db.Text
  userId    Int
  imageId   Int
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  users     users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_1")
  images    images    @relation(fields: [imageId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comments_ibfk_2")

  @@index([imageId], map: "imageId")
  @@index([userId], map: "userId")
}

model images {
  id           Int            @id @default(autoincrement())
  imageName    String         @db.VarChar(255)
  imagePath    String         @db.VarChar(500)
  description  String?        @db.Text
  userId       Int
  createdAt    DateTime?      @default(now()) @db.Timestamp(0)
  comments     comments[]
  users        users          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "images_ibfk_1")
  saved_images saved_images[]

  @@index([userId], map: "userId")
}

model saved_images {
  userId    Int
  imageId   Int
  createdAt DateTime? @default(now()) @db.Timestamp(0)
  users     users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "saved_images_ibfk_1")
  images    images    @relation(fields: [imageId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "saved_images_ibfk_2")

  @@id([userId, imageId])
  @@index([imageId], map: "imageId")
}

model users {
  id           Int            @id @default(autoincrement())
  email        String         @unique(map: "email") @db.VarChar(255)
  password     String?        @db.VarChar(255)
  fullName     String         @db.VarChar(100)
  age          Int?
  avatar       String?        @db.VarChar(500)
  googleId     String?        @unique(map: "googleId") @db.VarChar(255)
  createdAt    DateTime?      @default(now()) @db.Timestamp(0)
  updatedAt    DateTime?      @default(now()) @db.Timestamp(0)
  comments     comments[]
  images       images[]
  saved_images saved_images[]
}
